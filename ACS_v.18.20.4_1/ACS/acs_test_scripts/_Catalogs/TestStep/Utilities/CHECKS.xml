<?xml version="1.0" encoding="iso-8859-1"?>
<TestSteps xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../../../acs/src/_Catalogs/TestStep/teststep.xsd">
    <TestStep Id="COMPARE" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.Compare.Compare</ClassName>
        <Description>Compare two given arguments using the given comparison operator</Description>
        <Environment name="ANY"/>
        <Parameters>
            <Parameter name="FIRST" type="STRING" isOptional="false">
                <Description>First value to compare</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="SECOND" type="STRING" isOptional="false">
                <Description>Second value to compare. can be a blank string</Description>
                <PossibleValues/>
                <DefaultValue/>
                <Blank>True</Blank>
            </Parameter>
            <Parameter name="OPERATOR" type="STRING" isOptional="false">
                <Description>
                Comparison operator.  WITHIN_BOUNDS:  SECOND must be of the form x,d where x is the target value and d is the acceptable delta from x.
                In other words, it looks at whether FIRST is within the range [x-d, x+d].  Example:  FIRST="8", SECOND="10,3", OPERATOR="WITHIN_BOUNDS, PASS_IF="True".
                Result is PASS since 8 is within the range [7,13].
                </Description>
                <PossibleValues>EQUAL;NOT_EQUAL;GREATER;LESS;GREATER_OR_EQUAL;LESS_OR_EQUAL;IN;WITHIN_BOUNDS</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="PASS_IF" type="BOOLEAN" isOptional="false">
                <Description>
                    Defines whether the test must pass when the comparison succeeds, or fails. In this way it's possible
                    to make flexible comparisons. so if FIRST=10 and SECOND=10 and operator is equal, by default the test
                    will pass. If pass_if is false, then the test will fail.
                </Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="CHECK_CONTEXT_INFO" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
            <ClassName>acs_test_scripts.TestStep.Utilities.Checks.CheckContextInfoExists.CheckContextInfoExists</ClassName>
            <Description>Check if a key is in the context</Description>
            <Environment name="ANY"/>
            <Parameters>
                <Parameter name="KEY" type="STRING" isOptional="false">
                    <Description>Key to search in the context</Description>
                    <PossibleValues/>
                    <DefaultValue/>
                </Parameter>
            </Parameters>
    </TestStep>
    <TestStep Id="CHECK_CAMPAIGN_INFO" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
            <ClassName>acs_test_scripts.TestStep.Utilities.Checks.CheckCampaignInfo.CheckCampaignInfo</ClassName>
            <Description>Check if a KEY was in the campaign configuration file and store the value found into PARAM_VALUE as a string.
                            Use DEFAULT_VALUE for PARAM_VALUE if KEY was not found in the configuration file.</Description>
            <Environment name="ANY"/>
            <Parameters>
                <Parameter name="KEY" type="STRING" isOptional="false">
                    <Description>Value to search for in the configuration file.</Description>
                    <PossibleValues/>
                    <DefaultValue/>
                </Parameter>
                <Parameter name="PARAM_VALUE" type="CONTEXT" isOptional="false">
                    <Description>
                        <Key name="PARAM_VALUE_KEY" type="STRING">Final parameter value, either from DEFAULT_VALUE or from Campaign config.</Key>
                    </Description>
                    <PossibleValues/>
                    <DefaultValue/>
                </Parameter>
                <Parameter name="DEFAULT_VALUE" type="STRING" isOptional="false">
                    <Description>Value to store in PARAM_VALUE if nothing was found for KEY in the configuration file.</Description>
                    <PossibleValues/>
                    <DefaultValue/>
                </Parameter>
            </Parameters>
    </TestStep>
    <TestStep Id="CHECK_PATH" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.CheckPath.CheckPath</ClassName>
        <Description>Check some properties for the given path on host machine (existence, representing a file, ...)</Description>
        <Environment name="ANY"/>
        <Parameters>
            <Parameter name="PATH_TO_CHECK" type="STRING" isOptional="false">
                <Description>Path to check</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="OPERATOR" type="STRING" isOptional="false">
                <Description>Operation to do on the path</Description>
                <PossibleValues>EXIST;IS_FILE;IS_DIRECTORY</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="PASS_IF" type="BOOLEAN" isOptional="false">
                <Description>
                    Defines whether the test must pass when the comparison succeeds, or fails. In this way it's possible
                    to make flexible comparisons.
                </Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="CHECK_SNIFFER_LOG" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Equipment.Sniffer.CheckSnifferLog.CheckSnifferLog</ClassName>
        <Description>Check if expected requests exists in sniffer log.</Description>
        <Environment name="ANY"/>
        <Parameters>
            <Parameter name="SNIFFER_LOG_FILE" type="STRING" isOptional="false">
                <Description>Path and name of the sniffer log to analyze.</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="FRAME_TO_CHECK" type="STRING" isOptional="false">
                <Description>Frame to check. Can be a beacon frame or an association request frame.</Description>
                <PossibleValues>CHECK_FRAME_BEACON;CHECK_FRAME_ASSOCIATION_REQUEST</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="PARAM_TO_CHECK" type="STRING" isOptional="false">
                <Description>Parameter in the frame to check.</Description>
                <PossibleValues>CHECK_BANDWIDTH;CHECK_CAPABILITIES</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="PARAM_VALUE" type="STRING" isOptional="false">
                <Description>Value of the parameter to check. Can be a capability or a bandwidth</Description>
                <PossibleValues>20MHZ;40MHZ;80MHZ;HT_CAPABILITIES;VHT_CAPABILITIES</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="MAC_ADDR_SOURCE" type="STRING" isOptional="true">
                <Description>WiFi MAC address of the device which sent the frame.</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="MAC_ADDR_RECEIVER" type="STRING" isOptional="true">
                <Description>WiFi MAC address of the device which received the frame.</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_TEL_THROUGHPUT_TARGETS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetTelThroughputTargets.GetTelThroughputTargets</ClassName>
        <Description>get from the telephony throughput targets file (Throughput_targets.xml) the expected targets (target, failure, fute).</Description>
        <Environment name="ANY"/>
        <Parameters>
            <Parameter name="SECTION" type="STRING" isOptional="false">
                <Description>The section where the targets are retrieved. for example GPRS, EGPS, WCDMA, etc.
                If the downlink and uplink targets are on separate protocols, indicate both separated by semicolon (;). for example "HSDPA;WCDMA"</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="MULTISLOT" type="STRING" isOptional="false">
                <Description>the multislot configuration. set to default value if unused</Description>
                <PossibleValues/>
                <DefaultValue>none</DefaultValue>
            </Parameter>
            <Parameter name="DL_CONF" type="STRING" isOptional="false">
                <Description>The downlink configuration.</Description>
                <PossibleValues/>
                <DefaultValue>none</DefaultValue>
            </Parameter>
            <Parameter name="UL_CONF" type="STRING" isOptional="false">
                <Description>The uplink configuration.</Description>
                <PossibleValues/>
                <DefaultValue>none</DefaultValue>
            </Parameter>
            <Parameter name="SAVE_THROUGHPUT_AS" type="CONTEXT" isOptional="false">
                <Description>
                    <Key name="DL_TARGET" type="STRING">dl target</Key>
                    <Key name="DL_FAILURE" type="STRING">dl failure</Key>
                    <Key name="DL_FUTE" type="STRING">dl FUTE</Key>
                    <Key name="UL_TARGET" type="STRING">dul target</Key>
                    <Key name="UL_FAILURE" type="STRING">ul failure</Key>
                    <Key name="UL_FUTE" type="STRING">ul FUTE</Key>
                    <Key name="DL_UNIT" type="STRING">dl unit</Key>
                    <Key name="UL_UNIT" type="STRING">ul unit</Key>
                </Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="COMPARE_THROUGHPUTS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.CompareThroughputs.CompareThroughputs</ClassName>
        <Description>compares throughput value against throughput target. Basic type is expected to be bits/sec.</Description>
        <Environment name="ANY"/>
        <Parameters>
            <Parameter name="VALUE" type="FLOAT" isOptional="false">
                <Description>the measured value</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="TARGET" type="FLOAT" isOptional="false">
                <Description>the target value</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="VALUE_UNIT" type="STRING" isOptional="false">
                <Description>the measured value unit</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="TARGET_UNIT" type="STRING" isOptional="false">
                <Description>the target value unit</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="PRINT_VALUE" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.PrintValue.PrintValue</ClassName>
        <Description>Prints a given variable value for debugging purposes.</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="VALUE_TO_PRINT" type="STRING" isOptional="false">
                <Description>Variable you want to print the value of.</Description>
                <PossibleValues />
                <DefaultValue />
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="PRINT_MSG" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.PrintMsg.PrintMsg</ClassName>
        <Description>Prints a message for debugging purposes.</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="MSG_TO_PRINT" type="STRING" isOptional="false">
                <Description>Message to print.</Description>
                <PossibleValues />
                <DefaultValue />
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_BT_THROUGHPUT_TARGETS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetBtThroughputTargets.GetBtThroughputTargets</ClassName>
        <Description>Get from BT throughput target file (BT_Throughtput_Targets) the expected targets (target, failure)</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="DEVICE" type="STRING" isOptional="false">
                <Description>Device name used to retrieve the type</Description>
                <PossibleValues />
                <DefaultValue>PHONE1</DefaultValue>
            </Parameter>
            <Parameter name="BT_PROTOCOL" type="STRING" isOptional="false">
                <Description>Bluetooth protocol to used.</Description>
                <PossibleValues>OPP;PAN</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="DIRECTION" type="STRING" isOptional="false">
                <Description>Direction in which to generate traffic.</Description>
                <PossibleValues>up;down</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="TARGET_THROUGHPUT" type="CONTEXT" isOptional="false">
               <Description>Parameter bundle containing throughput target and failure values.
                   <Key name="BT_THROUGHPUT:TARGET_VALUE" type="FLOAT">Download throughput target.</Key>
                   <Key name="BT_THROUGHPUT:TARGET_UNIT" type="STRING">Download throughput target unit.</Key>
                   <Key name="BT_THROUGHPUT:FAILURE_VALUE" type="FLOAT">Download throughput failure.</Key>
                   <Key name="BT_THROUGHPUT:FAILURE_UNIT" type="STRING">Download throughput failure unit.</Key>
               </Description>
               <PossibleValues/>
               <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_WIFI_THROUGHPUT_TARGETS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetWifiThroughput.GetWifiThroughput</ClassName>
        <Description>Get from Wifi throughput target file (Wifi_Throughtput_Targets) the expected targets (target, failure)</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="DEVICE" type="STRING" isOptional="false">
                <Description>Device name used to retrieve the type</Description>
                <PossibleValues />
                <DefaultValue>PHONE1</DefaultValue>
            </Parameter>
            <Parameter name="STANDARD" type="STRING" isOptional="false">
                <Description>The standard used on the radio.</Description>
                <PossibleValues>a;b;g;n;an;bg;gb;bgn;ngb;n2.4G;n5G;ac</PossibleValues>
                <DefaultValue>bgn</DefaultValue>
            </Parameter>
            <Parameter name="BANDWIDTH" type="STRING" isOptional="false">
                <Description>WiFi bandwidth to use in MHz.</Description>
                <PossibleValues>20;40;80</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="WIFI_SECURITY" type="STRING" isOptional="false">
                <Description>Wifi Security of wifi env to be used.</Description>
                <PossibleValues>OPEN;WEP64;WEP64-OPEN;WEP128;WEP128-OPEN;WPA-PSK-TKIP;WPA2-PSK-AES;EAP-WPA;EAP-WPA2</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="IPERF_PROTOCOL" type="STRING" isOptional="false">
                <Description>Network protocol to use.</Description>
                <PossibleValues>tcp;udp</PossibleValues>
                <DefaultValue>tcp</DefaultValue>
            </Parameter>
            <Parameter name="DIRECTION" type="STRING" isOptional="false">
                <Description>Direction in which to generate traffic, relative to the iperf client.</Description>
                <PossibleValues>up;down</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="TARGET_THROUGHPUT" type="CONTEXT" isOptional="false">
               <Description>Parameter bundle containing throughput target and failure values.
                   <Key name="IPERF_THROUGHPUT:TARGET_VALUE" type="FLOAT">Download throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:TARGET_UNITS" type="STRING">Download throughput measurement units.</Key>
                   <Key name="IPERF_THROUGHPUT:FAILURE_VALUE" type="FLOAT">Download throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:FAILURE_UNITS" type="STRING">Download throughput measurement units.</Key>
               </Description>
               <PossibleValues/>
               <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_WIFI_CONNECTION_TARGETS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetWifiConnectionTarget.GetWifiConnectionTarget</ClassName>
        <Description>Get from Wifi connection target file (Wifi_Connection_Targets) the expected targets (target, failure).</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="DEVICE" type="STRING" isOptional="false">
                <Description>Device name used to retrieve the type.</Description>
                <PossibleValues />
                <DefaultValue>PHONE1</DefaultValue>
            </Parameter>
            <Parameter name="TARGET_CONNECTION" type="CONTEXT" isOptional="false">
               <Description>Parameter bundle containing connection target and failure values.
                   <Key name="CONNECTION_TIME:TARGET_VALUE" type="FLOAT">Connection time value.</Key>
                   <Key name="CONNECTION_TIME:TARGET_UNIT" type="STRING">Connection time unit.</Key>
                   <Key name="CONNECTION_TIME:FAILURE_VALUE" type="FLOAT">Failure time value.</Key>
                   <Key name="CONNECTION_TIME:FAILURE_UNIT" type="STRING">Failure time unit.</Key>
               </Description>
               <PossibleValues/>
               <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_WIFI_DIRECT_THROUGHPUT_TARGETS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetWifiDirectThroughputTargets.GetWifiDirectThroughputTargets</ClassName>
        <Description>Get from Wifi Direct throughput target file (Wifi_Direct_Throughtput_Targets) the expected targets (target, failure)</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="DEVICE" type="STRING" isOptional="false">
                <Description>Device name used to retrieve the type</Description>
                <PossibleValues />
                <DefaultValue>PHONE1</DefaultValue>
            </Parameter>
            <Parameter name="BANDWIDTH" type="STRING" isOptional="false">
                <Description>WiFi bandwidth to use in MHz.</Description>
                <PossibleValues>20;40;80</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="IPERF_PROTOCOL" type="STRING" isOptional="false">
                <Description>Network protocol to use.</Description>
                <PossibleValues>tcp;udp</PossibleValues>
                <DefaultValue>tcp</DefaultValue>
            </Parameter>
            <Parameter name="DIRECTION" type="STRING" isOptional="false">
                <Description>Direction in which to generate traffic, relative to the iperf client.</Description>
                <PossibleValues>up;down</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="TARGET_THROUGHPUT" type="CONTEXT" isOptional="false">
               <Description>Parameter bundle containing throughput target and failure values.
                   <Key name="IPERF_THROUGHPUT:TARGET_VALUE" type="FLOAT">Iperf throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:TARGET_UNITS" type="STRING">Iperf throughput measurement units.</Key>
                   <Key name="IPERF_THROUGHPUT:FAILURE_VALUE" type="FLOAT">Iperf throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:FAILURE_UNITS" type="STRING">Iperf throughput measurement units.</Key>
               </Description>
               <PossibleValues/>
               <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_WIFI_MR_THROUGHPUT_TARGETS" Domain="UTILITIES" SubDomain="CHECKS" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetWifiMRThroughputTargets.GetWifiMRThroughputTargets</ClassName>
        <Description>Get from Wifi MR throughput target file (Wifi_MR_Throughtput_Targets) the expected targets (target, failure)</Description>
        <Environment name="ANY" />
        <Parameters>
            <Parameter name="DEVICE" type="STRING" isOptional="false">
                <Description>Device name used to retrieve the type</Description>
                <PossibleValues />
                <DefaultValue>PHONE1</DefaultValue>
            </Parameter>
            <Parameter name="STANDARD_FREQUENCY" type="STRING" isOptional="false">
                <Description>WiFi Standard Frequency used.</Description>
                <PossibleValues>2.4G;5G</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="BANDWIDTH" type="STRING" isOptional="false">
                <Description>WiFi bandwidth to use in MHz.</Description>
                <PossibleValues>20;40;80</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="STA_IPERF_PROTOCOL" type="STRING" isOptional="false">
                <Description>Network protocol to use for STA.</Description>
                <PossibleValues>tcp;udp</PossibleValues>
                <DefaultValue>tcp</DefaultValue>
            </Parameter>
            <Parameter name="STA_DIRECTION" type="STRING" isOptional="false">
                <Description>Direction in which to generate traffic, relative to the iperf client, for STA.</Description>
                <PossibleValues>up;down</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="P2P_IPERF_PROTOCOL" type="STRING" isOptional="false">
                <Description>Network protocol to use for P2P.</Description>
                <PossibleValues>tcp;udp</PossibleValues>
                <DefaultValue>tcp</DefaultValue>
            </Parameter>
            <Parameter name="P2P_DIRECTION" type="STRING" isOptional="false">
                <Description>Direction in which to generate traffic, relative to the iperf client, for P2P.</Description>
                <PossibleValues>up;down</PossibleValues>
                <DefaultValue/>
            </Parameter>
            <Parameter name="TARGET_THROUGHPUT" type="CONTEXT" isOptional="false">
               <Description>Parameter bundle containing throughput target and failure values.
                   <Key name="IPERF_THROUGHPUT:STA_TARGET_VALUE" type="FLOAT">STA Iperf throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:STA_TARGET_UNIT" type="STRING">STA Iperf throughput measurement units.</Key>
                   <Key name="IPERF_THROUGHPUT:STA_FAILURE_VALUE" type="FLOAT">STA Iperf throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:STA_FAILURE_UNIT" type="STRING">STA Iperf throughput measurement units.</Key>
                   <Key name="IPERF_THROUGHPUT:P2P_TARGET_VALUE" type="FLOAT">P2P Iperf throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:P2P_TARGET_UNIT" type="STRING">P2P Iperf throughput measurement units.</Key>
                   <Key name="IPERF_THROUGHPUT:P2P_FAILURE_VALUE" type="FLOAT">P2P Iperf throughput.</Key>
                   <Key name="IPERF_THROUGHPUT:P2P_FAILURE_UNIT" type="STRING">P2P Iperf throughput measurement units.</Key>
               </Description>
               <PossibleValues/>
               <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
    <TestStep Id="GET_SMS_SEGMENTS_NUMBER" Domain="UTILITIES" SubDomain="RESULT" Feature="" Status="DONE">
        <ClassName>acs_test_scripts.TestStep.Utilities.Checks.GetSmsSegmentsNumber.GetSmsSegmentsNumber</ClassName>
        <Description>Get number of SMS segments in one SMS</Description>
        <Environment name="ANY"/>
        <Parameters>
            <Parameter name="SMS_NUMBER" type="STRING" isOptional="false">
                <Description>number of SMS segments</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="SMS_TEXT" type="STRING" isOptional="false">
                <Description>SMS body</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
            <Parameter name="NB_BITS_PER_CHAR" type="INTEGER" isOptional="false">
                <Description>nb bits per sms characters</Description>
                <PossibleValues/>
                <DefaultValue/>
            </Parameter>
        </Parameters>
    </TestStep>
</TestSteps>
